@page "/hotels"
@attribute [Authorize]
@using Rezervasyon.Client.Models
@inject HttpClient Http

<PageTitle>Oteller</PageTitle>

<h1>Otel Listesi</h1>
<AuthorizeView Roles="Admin">
<button class="btn btn-primary mb-3" @onclick="OpenAddModal">Yeni Otel Ekle</button>
</AuthorizeView>

@if (hotels == null)
{
    <p><em>Yükleniyor...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Otel Adı</th>
                <th>Şehir</th>
                <th>Yıldız</th>
                <AuthorizeView roles="Admin">
                <th>İşlemler</th>
                </AuthorizeView>
            </tr>
        </thead>
        <tbody>
            @foreach (var hotel in hotels)
            {
                <tr>
                    <td>@hotel.Name</td>
                    <td>@hotel.City</td>
                    <td>@hotel.Stars</td>
                    <AuthorizeView Roles="Admin">
                    <td>
                        <button class="btn btn-warning btn-sm" @onclick="() => OpenEditModal(hotel)">Düzenle</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteHotel(hotel.Id)">Sil</button>
                    </td>
                    </AuthorizeView>
                </tr>
            }
        </tbody>
    </table>
}

@if (isModalVisible)
{
    <div class="modal fade show" tabindex="-1" style="display: block;" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@(isEditMode ? "Oteli Düzenle" : "Yeni Otel Ekle")</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    @if (currentHotel != null)
                    {
                        <EditForm Model="currentHotel" OnValidSubmit="HandleSave">
                            <DataAnnotationsValidator />

                            <div class="mb-3">
                                <label for="name" class="form-label">Otel Adı</label>
                                <InputText id="name" class="form-control" @bind-Value="currentHotel.Name" />
                                <ValidationMessage For="@(() => currentHotel.Name)" />
                            </div>
                            <div class="mb-3">
                                <label for="city" class="form-label">Şehir</label>
                                <InputText id="city" class="form-control" @bind-Value="currentHotel.City" />
                                <ValidationMessage For="@(() => currentHotel.City)" />
                            </div>
                            <div class="mb-3">
                                <label for="stars" class="form-label">Yıldız Sayısı</label>
                                <InputNumber id="stars" class="form-control" @bind-Value="currentHotel.Stars" />
                                <ValidationMessage For="@(() => currentHotel.Stars)" />
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" @onclick="CloseModal">İptal</button>
                                @if (isEditMode)
                                {
                                    <button type="submit" class="btn btn-primary">Değişiklikleri Kaydet</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-success">Oteli Kaydet</button>
                                }
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}


@code {
    private List<Hotel>? hotels;

  
    private bool isModalVisible = false;
    private bool isEditMode = false;
    private Hotel currentHotel = new Hotel();

    protected override async Task OnInitializedAsync() => await LoadHotels();
    private async Task LoadHotels() => hotels = (await Http.GetFromJsonAsync<Hotel[]>("api/hotels"))?.ToList();

    private void OpenAddModal()
    {
        isEditMode = false;
        currentHotel = new Hotel();
        isModalVisible = true;
    }

    private void OpenEditModal(Hotel hotel)
    {
        isEditMode = true;
        currentHotel = new Hotel { Id = hotel.Id, Name = hotel.Name, City = hotel.City, Stars = hotel.Stars };
        isModalVisible = true;
    }

    private void CloseModal() => isModalVisible = false;

    private async Task HandleSave()
    {
        if (isEditMode)
        {
            await Http.PutAsJsonAsync($"api/hotels/{currentHotel.Id}", currentHotel);
        }
        else
        {
            await Http.PostAsJsonAsync("api/hotels", currentHotel);
        }

        CloseModal();
        await LoadHotels();
    }
    
    private async Task DeleteHotel(int hotelId)
    {
        await Http.DeleteAsync($"api/hotels/{hotelId}");
        await LoadHotels();
    }
}